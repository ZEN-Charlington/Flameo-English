<?php
// controllers/PasswordResetController.php

// Include PHPMailer th·ªß c√¥ng (thay v√¨ autoload)
require_once 'vendor/phpmailer/PHPMailer-6.8.1/src/Exception.php';
require_once 'vendor/phpmailer/PHPMailer-6.8.1/src/PHPMailer.php';
require_once 'vendor/phpmailer/PHPMailer-6.8.1/src/SMTP.php';
require_once 'config/EmailConfig.php';

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

class PasswordResetController {
    private $db;
    private $user;

    public function __construct($db) {
        $this->db = $db;
        $this->user = new User($db);
    }

    public function forgotPassword($data) {
        if(empty($data['email'])) {
            return [
                'status' => 400,
                'message' => 'Email l√† b·∫Øt bu·ªôc'
            ];
        }

        $this->user->email = $data['email'];
        
        if(!$this->user->findByEmail()) {
            return [
                'status' => 404,
                'message' => 'Email kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng'
            ];
        }

        $otp = $this->user->generateResetOTP();
        
        if($otp) {
            if($this->sendOTPEmail($data['email'], $otp)) {
                return [
                    'status' => 200,
                    'message' => 'M√£ OTP ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn email c·ªßa b·∫°n',
                    'email' => $data['email']
                ];
            } else {
                return [
                    'status' => 500,
                    'message' => 'Kh√¥ng th·ªÉ g·ª≠i email. Vui l√≤ng th·ª≠ l·∫°i sau.'
                ];
            }
        }
        
        return [
            'status' => 500,
            'message' => 'Kh√¥ng th·ªÉ t·∫°o OTP'
        ];
    }

    public function verifyOTP($data) {
        if(empty($data['otp'])) {
            return [
                'status' => 400,
                'message' => 'M√£ OTP l√† b·∫Øt bu·ªôc'
            ];
        }

        if($this->user->verifyResetOTP($data['otp'])) {
            return [
                'status' => 200,
                'message' => 'OTP h·ª£p l·ªá',
                'email' => $this->user->email
            ];
        }

        return [
            'status' => 400,
            'message' => 'OTP kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n'
        ];
    }

    public function resetPassword($data) {
        if(empty($data['otp']) || empty($data['new_password'])) {
            return [
                'status' => 400,
                'message' => 'OTP v√† m·∫≠t kh·∫©u m·ªõi l√† b·∫Øt bu·ªôc'
            ];
        }

        if(!$this->user->verifyResetOTP($data['otp'])) {
            return [
                'status' => 400,
                'message' => 'OTP kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n'
            ];
        }

        if($this->user->checkCurrentPassword($data['new_password'])) {
            return [
                'status' => 400,
                'message' => 'M·∫≠t kh·∫©u m·ªõi kh√¥ng ƒë∆∞·ª£c tr√πng v·ªõi m·∫≠t kh·∫©u c≈©',
                'same_password' => true
            ];
        }

        if($this->user->resetPasswordWithOTP($data['new_password'])) {
            return [
                'status' => 200,
                'message' => 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng'
            ];
        }

        return [
            'status' => 500,
            'message' => 'Kh√¥ng th·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u'
        ];
    }

    private function sendOTPEmail($email, $otp) {
        $mail = new PHPMailer(true);
        
        try {
            $mail->isSMTP();
            $mail->Host       = SMTP_HOST;
            $mail->SMTPAuth   = true;
            $mail->Username   = SMTP_USERNAME;
            $mail->Password   = SMTP_PASSWORD;
            $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
            $mail->Port       = SMTP_PORT;
            $mail->CharSet    = 'UTF-8';
            
            $mail->setFrom(FROM_EMAIL, FROM_NAME);
            $mail->addAddress($email);
            
            $mail->isHTML(true);
            $mail->Subject = 'M√£ x√°c th·ª±c ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u - Flameo English';
            $mail->Body    = "
                <div style='font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;'>
                    <div style='text-align: center; margin-bottom: 30px;'>
                        <h2 style='color: #4A90E2; margin: 0;'>üî• Flameo English</h2>
                    </div>
                    
                    <div style='background: #f8f9fa; padding: 30px; border-radius: 10px; border-left: 4px solid #4A90E2;'>
                        <h3 style='color: #333; margin-top: 0;'>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h3>
                        <p style='color: #666; font-size: 16px; line-height: 1.5;'>
                            B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n Flameo English.
                        </p>
                        
                        <p style='color: #333; font-size: 16px; margin: 20px 0 10px 0;'>
                            <strong>M√£ OTP c·ªßa b·∫°n l√†:</strong>
                        </p>
                        
                        <div style='background: white; padding: 20px; text-align: center; font-size: 32px; font-weight: bold; color: #4A90E2; border: 3px dashed #4A90E2; margin: 20px 0; border-radius: 8px; letter-spacing: 8px;'>
                            $otp
                        </div>
                        
                        <div style='background: #fff3cd; padding: 15px; border-radius: 8px; border-left: 4px solid #ffc107; margin: 20px 0;'>
                            <p style='color: #856404; margin: 0; font-weight: bold;'>
                                ‚ö†Ô∏è M√£ n√†y s·∫Ω h·∫øt h·∫°n sau 15 ph√∫t
                            </p>
                        </div>
                        
                        <p style='color: #666; font-size: 14px; margin-top: 20px;'>
                            N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.
                        </p>
                    </div>
                    
                    <div style='text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;'>
                        <p style='color: #999; font-size: 12px; margin: 0;'>
                            Email t·ª± ƒë·ªông t·ª´ Flameo English - Kh√¥ng reply
                        </p>
                    </div>
                </div>
            ";
            
            $mail->send();
            error_log("OTP sent successfully to $email: $otp");
            return true;
            
        } catch (Exception $e) {
            error_log("Email sending failed to $email: {$mail->ErrorInfo}");
            return false;
        }
    }
}
?>